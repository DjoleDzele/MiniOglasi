@model MiniOglasi.ViewModels.AutoOglasViewModel

@{
    ViewBag.Title = Model.AutoOglas.Id == 0 ? "Create Auto Oglas" : "Edit Auto Oglas";
}

<h2>Create Auto Oglas</h2>
<h5 style="color:red">@ViewBag.Greska</h5>

@using (Html.BeginForm("SaveAutoOglas",
                       "AutoOglasi",
                       FormMethod.Post,
                       new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Auto Oglas</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.NaslovOglasa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.NaslovOglasa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.NaslovOglasa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.Cena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.Cena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.Cena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.ValutaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AutoOglas.ValutaId, new SelectList(Model.Valute, "Id", "ImeValute"), new { htmlAttributes = new { @class = "form -control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.ValutaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.OpisOglasa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.OpisOglasa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.OpisOglasa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.Kilometraza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.Kilometraza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.Kilometraza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.KonjskeSnage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.KonjskeSnage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.KonjskeSnage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.Kubikaza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.Kubikaza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.Kubikaza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.Godiste, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AutoOglas.Godiste, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.Godiste, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.MarkaAutaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.AutoOglas.MarkaAutaId, new SelectList(Model.MarkeAuta, "Id", "Marka"), "", new { htmlAttributes = new { @class = "form -control" } })*@
                <select id="AutoOglas_MarkaAutaId" name="AutoOglas.MarkaAutaId">
                    @foreach (var markaAuta in Model.MarkeAuta)
                    {
                        string selected = markaAuta.Id == Model.AutoOglas.MarkaAutaId ? "selected" : "";

                        <option @selected value="@markaAuta.Id">@markaAuta.Marka</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.AutoOglas.MarkaAutaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.ModelAutaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="AutoOglas_ModelAutaId" name="AutoOglas.ModelAutaId" style="min-width:100px"></select>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.AutoOglas.ModelAutaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AutoOglas.ModelAutaId, new SelectList(Model.ModeliAuta, "Id", "AutoModel"), "", new { htmlAttributes = new { @class = "form -control" } })
                    @Html.ValidationMessageFor(model => model.AutoOglas.ModelAutaId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AutoOglas.StanjeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AutoOglas.StanjeId, new SelectList(Model.Stanja, "Id", "StanjePredmetaOglasa"), "", new { htmlAttributes = new { @class = "form -control" } })
                @Html.ValidationMessageFor(model => model.AutoOglas.StanjeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="uploadedImage">Dodaj sliku</label>
            <div class="col-md-10">
                <input type="file" multiple name="uploadedImages" id="uploadedImages" accept=".jpg,.png" value="Izaberite sliku" />
            </div>
        </div>

        @Html.HiddenFor(model => model.AutoOglas.Id)
        @Html.HiddenFor(model => model.AutoOglas.UserAutorOglasaId)
        @Html.HiddenFor(model => model.AutoOglas.DatumPostavljanja)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="slikeZaBrisanjeDiv">
    @if (Model.AutoOglas.Slike != null && Model.AutoOglas.Id != 0)
    {
        foreach (var slika in Model.AutoOglas.Slike)
        {
            <img data-slikaId="@slika.Id"
                 class="js-delete-img"
                 src="@Url.Content(slika.PathDoSlike)"
                 alt="Alternate Text" width="55" height="55" style="margin: 15px" />
        }
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var izborAutoMarkeDropdown = document.querySelector("#AutoOglas_MarkaAutaId");  // $("#marke-auta-dropdownlist");
            var izborAutoModelaDropdown = document.querySelector("#AutoOglas_ModelAutaId"); // $("#modeli-auta-dropdownlist");

            popuniTabeluAutoModela(izborAutoMarkeDropdown.value);

            function popuniTabeluAutoModela(autoMarkaId) {
                $.ajax({
                    url: "/api/auto-modeli/" + autoMarkaId,
                    method: "GET",
                    success: function (data) {

                        izborAutoModelaDropdown.innerHTML = "";

                        data.forEach(function (x) {
                            //var opcijaZaModel = document.createElement("option");
                            //opcijaZaModel.value = x.Id;
                            //opcijaZaModel.text = x.AutoModel;

                            var opcijaZaModel =
                                `<option ${x.Id == @Model.AutoOglas.ModelAutaId ? selected="selected" : ""} value="${x.Id}">${x.AutoModel}</option>`
                            izborAutoModelaDropdown.innerHTML += opcijaZaModel;

                            //izborAutoModelaDropdown.append(opcijaZaModel);
                        })
                    },
                    error: function (err) {
                        console.log(err)
                    }
                })
            }

            izborAutoMarkeDropdown.addEventListener("change", function (e) {
                var izabranaMarkaAuta = e.target.value;

                popuniTabeluAutoModela(izabranaMarkaAuta);
            });

            $("#slikeZaBrisanjeDiv").on("click", function (e) {

                var kliknutaSlika = e.target;
                var slikaId;

                if (kliknutaSlika.classList.contains("js-delete-img")) {

                    slikaId = kliknutaSlika.dataset["slikaid"];

                    $.ajax({
                        url: `/api/slike/${slikaId}`,
                        method: "DELETE",
                        success: function () {
                            kliknutaSlika.remove();
                        },
                        error: function (err) {
                            console.log(err)
                        }
                    });
                }
            })
        })
    </script>
}