@model MiniOglasi.ViewModels.OglasIndexViewModel

@using MiniOglasi.Models
@using MiniOglasi.Models.RacunarOglasModels
@using MiniOglasi.Models.NekretninaOglasModels
@using PagedList;
@using PagedList.Mvc;

@{
    bool jeLiAutoOglas = Model._vrstaOglasa == VrstaOglasa.Auto;
    bool jeLiRacunarOglas = Model._vrstaOglasa == VrstaOglasa.Racunar;
    bool jeLiNekretninaOglas = Model._vrstaOglasa == VrstaOglasa.Nekretnina;
    bool jeLiListaOglasaPoKorisniku = Model._vrstaOglasa == VrstaOglasa.OglasiPoKorisniku;
    var imeKontrolera = ViewContext.RouteData.Values["controller"].ToString();
    string imeZaListuOglasa = jeLiListaOglasaPoKorisniku ? "lista-oglasa-po-korisniku" : "main-lista-oglasa";

    if (!jeLiListaOglasaPoKorisniku)
    {
        ViewBag.Title = "Lista oglasa";
    }
}

<main id="@imeZaListuOglasa">
    @if (!jeLiListaOglasaPoKorisniku)
    {
        <div id="deoZaFiltere">
            @using (Html.BeginForm("Index", imeKontrolera, FormMethod.Get))
            {
                <div class="red-filtera">
                    <button class="dugme dugme-za-filtriranje" type="submit">Pretraga <i class="fas fa-search"></i></button>
                    <a href="@Url.Action("Create", imeKontrolera)" class="dugme dugme-za-novi-oglas">Novi oglas <i class="fas fa-file-alt"></i></a>
                </div>

                //ZA SVE--------------------------------------------------

                <span>Sortiraj prema:</span>
                <div class="red-filtera">
                    <select id="sortiranje" name="sortiranje" class="form-control">
                        <option value="0"></option>
                        <option value="1">Cena opadajuce</option>
                        <option value="2">Cena rastuce</option>
                        <option value="3">Prvo noviji</option>
                        <option value="4">Prvo stariji</option>
                    </select>
                </div>

                <span>Cena u dinarima:</span>
                <div class="red-filtera">
                    <input id="minCena" name="minCena" type="number" placeholder="min" min="0" class="form-control" />
                    <input id="maxCena" name="maxCena" type="number" placeholder="max" min="0" class="form-control" />
                </div>

                <span>Stanje:</span>
                <div class="red-filtera">
                    @Html.DropDownList("stanje", new SelectList(Model.Stanja, "Id", "StanjePredmetaOglasa"), "", new { @class = "form-control", name = "stanje", id = "stanje" })
                </div>

                //ZA AUTE--------------------------------------------------

                if (jeLiAutoOglas)
                {
                    <span>Marka auta:</span>
                    <div class="red-filtera">
                        <select id="markaAuta" name="markaAuta" class="form-control">
                            <option value="0"></option>
                            @foreach (var markaAuta in Model.MarkeAuta)
                            {
                                <option value="@markaAuta.Id">@markaAuta.Marka</option>
                            }
                        </select>
                    </div>

                    <span>Model auta:</span>
                    <div class="red-filtera">
                        <select id="modelAuta" name="modelAuta" class="form-control"></select>
                    </div>

                    <span>Kilometraza max:</span>
                    <div class="red-filtera">
                        <input id="maxKilometraza" name="maxKilometraza" type="number" min="0" class="form-control" />
                    </div>

                    <span>Konjskih snaga:</span>
                    <div class="red-filtera">
                        <input id="minKonjskihSnaga" name="minKonjskihSnaga" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxKonjskihSnaga" name="maxKonjskihSnaga" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>Kubikaza:</span>
                    <div class="red-filtera">
                        <input id="minKubikaza" name="minKubikaza" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxKubikaza" name="maxKubikaza" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>Godiste:</span>
                    <div class="red-filtera">
                        <select id="izborGodista1" name="izborGodista1" class="form-control">
                            <option value="0">Od</option>
                            @for (int i = DateTime.Now.Year; i >= 1900; i--)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                        <select id="izborGodista2" name="izborGodista2" class="form-control">
                            <option value="0">Do</option>
                            @for (int j = DateTime.Now.Year; j >= 1900; j--)
                            {
                                <option value="@j">@j</option>
                            }
                        </select>
                    </div>
                }
                else if (jeLiRacunarOglas)
                {
                    <span>Marka racunara:</span>
                    <div class="red-filtera">
                        <select id="markaRacunara" name="markaRacunara" class="form-control">
                            <option value="0"></option>
                            @foreach (var markaRacunara in Model.MarkeRacunara)
                            {
                                <option value="@markaRacunara.Id">@markaRacunara.Marka</option>
                            }
                        </select>
                    </div>

                    <span>Tip racunara:</span>
                    <div class="red-filtera">
                        <select id="tipRacunara" name="tipRacunara" class="form-control">
                            <option value="0"></option>
                            @foreach (var tipRacunara in Model.TipoviRacunara)
                            {
                                <option value="@tipRacunara.Id">@tipRacunara.Tip</option>
                            }
                        </select>
                    </div>

                    <span>Marka graficke:</span>
                    <div class="red-filtera">
                        <select id="markaGraficke" name="markaGraficke" class="form-control">
                            <option value="0"></option>
                            @foreach (var markaGraficke in Model.GrafickaKartaMarke)
                            {
                                <option value="@markaGraficke.Id">@markaGraficke.MarkaGraficke</option>
                            }
                        </select>
                    </div>

                    <span>Graficka memorija:</span>
                    <div class="red-filtera">
                        <input id="minGrafickaMemorija" name="minGrafickaMemorija" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxGrafickaMemorija" name="maxGrafickaMemorija" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>HDD memorija:</span>
                    <div class="red-filtera">
                        <input id="minHddMemorija" name="minHddMemorija" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxHddMemorija" name="maxHddMemorija" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>RAM memorija:</span>
                    <div class="red-filtera">
                        <input id="minRamMemorija" name="minRamMemorija" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxRamMemorija" name="maxRamMemorija" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>CPU brzina:</span>
                    <div class="red-filtera">
                        <input id="minProcesorBrzina" name="minProcesorBrzina" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxProcesorBrzina" name="maxProcesorBrzina" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>CPU jezgara:</span>
                    <div class="red-filtera">
                        <input id="minProcesorJezgara" name="minProcesorJezgara" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxProcesorJezgara" name="maxProcesorJezgara" type="number" placeholder="max" min="0" class="form-control" />
                    </div>
                }
                else if (jeLiNekretninaOglas)
                {
                    <span>Tip nekretnine:</span>
                    <div class="red-filtera">
                        <select id="tipNekretnine" name="tipNekretnine" class="form-control">
                            <option value="0"></option>
                            @foreach (var tipNekretnine in Model.TipoviNekretnine)
                            {
                                <option value="@tipNekretnine.Id">@tipNekretnine.Tip</option>
                            }
                        </select>
                    </div>

                    <span>Lokacija nekretnine:</span>
                    <div class="red-filtera">
                        <select id="lokacijaNekretnine" name="lokacijaNekretnine" class="form-control">
                            <option value="0"></option>
                            @foreach (var lokacijaNekretnine in Model.Gradovi)
                            {
                                <option value="@lokacijaNekretnine.Id">@lokacijaNekretnine.ImeGrada</option>
                            }
                        </select>
                    </div>

                    <span>Kvadratura:</span>
                    <div class="red-filtera">
                        <input id="minKvadratura" name="minKvadratura" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxKvadratura" name="maxKvadratura" type="number" placeholder="max" min="0" class="form-control" />
                    </div>

                    <span>Broj soba:</span>
                    <div class="red-filtera">
                        <input id="minBrojSoba" name="minBrojSoba" type="number" placeholder="min" min="0" class="form-control" />
                        <input id="maxBrojSoba" name="maxBrojSoba" type="number" placeholder="max" min="0" class="form-control" />
                    </div>
                }
            }
        </div>
    }

    <div id="deoZaListuOglasa">
        @if (jeLiListaOglasaPoKorisniku)
        {
            if (ViewBag.Title != null)
            {
                <h3>@ViewBag.Title</h3>
            }
            if (ViewBag.Telefon != null)
            {
                <h4>@ViewBag.Telefon</h4>
            }
            if (ViewBag.Grad != null)
            {
                <h4>@ViewBag.Grad</h4>
            }
            if (!(Model.Oglasi.Any(x => x != null)))
            {
                <h3>Lista prazna</h3>
            }
            <hr />
        }
        @foreach (var item in Model.Oglasi)
        {
            string pathDoSlike = "";

            if (item.Slike != null && item.Slike.Any())
            {
                pathDoSlike = Url.Content(item.Slike.ElementAt(0).PathDoSlike);
            }
            else
            {
                pathDoSlike = Url.Content(PomocnaKlasa.PlaceholderSlika);
            }

            if (jeLiListaOglasaPoKorisniku)
            {
                if (item is AutoOglas)
                {
                    imeKontrolera = "AutoOglasi";
                }
                else if (item is RacunarOglas)
                {
                    imeKontrolera = "RacunariOglasi";
                }
                else if (item is NekretninaOglas)
                {
                    imeKontrolera = "NekretnineOglasi";
                }
            }

            <div class="oglas-okvir">
                <a href="@Url.Action("Details", imeKontrolera, new { id = item.Id })">
                    <div class="oglas-list-item">
                        <div class="slika-oglasa" style="background-image: url(@pathDoSlike);">
                        </div>
                        <div class="main-info-oglasa">
                            <p class="oglas-item-naslov">
                                <span>@Html.DisplayFor(oglas => item.NaslovOglasa)</span>
                            </p>
                            <p class="oglas-item-cena">
                                <span>@Html.DisplayFor(oglas => item.Cena) @item.Valuta.ImeValute</span>
                            </p>
                            <div class="oglas-item-body">
                                <p class="oglas-item-red-polje">
                                    <strong class="naziv-polja-oglasa">Postavljen: </strong>
                                    <span class="vrednost-polja-oglasa">@item.DatumPostavljanja.ToShortDateString()</span>
                                </p>

                                @*ZA AUTE---------------------------------------------*@

                                @if (jeLiAutoOglas)
                                {
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((AutoOglas)item).MarkaAutaId): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((AutoOglas)item).MarkaAuta.Marka)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((AutoOglas)item).ModelAutaId): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((AutoOglas)item).ModelAuta.AutoModel)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((AutoOglas)item).Godiste): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((AutoOglas)item).Godiste)</span>
                                    </p>
                                }

                                @*ZA RACUNARE---------------------------------------------*@

                                @if (jeLiRacunarOglas)
                                {
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((RacunarOglas)item).TipRacunara): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((RacunarOglas)item).TipRacunara.Tip)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((RacunarOglas)item).MarkaRacunara): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((RacunarOglas)item).MarkaRacunara.Marka)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((RacunarOglas)item).MarkaGrafickeKarte): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((RacunarOglas)item).MarkaGrafickeKarte.MarkaGraficke)</span>
                                    </p>
                                }

                                @*ZA NEKRETNINE---------------------------------------------*@

                                @if (jeLiNekretninaOglas)
                                {
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((NekretninaOglas)item).TipNekretnine): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((NekretninaOglas)item).TipNekretnine.Tip)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((NekretninaOglas)item).Grad): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((NekretninaOglas)item).Grad.ImeGrada)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => ((NekretninaOglas)item).Kvadratura): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => ((NekretninaOglas)item).Kvadratura) m<sup>2</sup></span>
                                    </p>
                                }

                                @*ZA OMILJENE---------------------------------------------*@

                                @if (jeLiListaOglasaPoKorisniku)
                                {
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => item.UserAutorOglasa): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => item.UserAutorOglasa.UserName)</span>
                                    </p>
                                    <p class="oglas-item-red-polje">
                                        <strong class="naziv-polja-oglasa">@Html.DisplayNameFor(oglas => item.Stanje): </strong>
                                        <span class="vrednost-polja-oglasa">@Html.DisplayFor(oglas => item.Stanje.StanjePredmetaOglasa)</span>
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }
        @if (jeLiAutoOglas)
        {
            @Html.PagedListPager(Model.Oglasi, page => Url.Action("Index",
            new {
                page,
                sortiranje = Request.QueryString.Get("sortiranje"),
                maxCena = Request.QueryString.Get("maxCena"),
                minCena = Request.QueryString.Get("minCena"),
                stanje = Request.QueryString.Get("stanje"),
                //-------------------------------------------------
                markaAuta = Request.QueryString.Get("markaAuta"),
                modelAuta = Request.QueryString.Get("modelAuta"),
                maxKilometraza = Request.QueryString.Get("maxKilometraza"),
                maxKonjskihSnaga = Request.QueryString.Get("maxKonjskihSnaga"),
                minKonjskihSnaga = Request.QueryString.Get("minKonjskihSnaga"),
                maxKubikaza = Request.QueryString.Get("maxKubikaza"),
                minKubikaza = Request.QueryString.Get("minKubikaza"),
                izborGodista2 = Request.QueryString.Get("izborGodista2"),
                izborGodista1 = Request.QueryString.Get("izborGodista1"),
            }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
        }
        else if (jeLiRacunarOglas)
        {
            @Html.PagedListPager(Model.Oglasi, page => Url.Action("Index",
            new {
                page,
                sortiranje = Request.QueryString.Get("sortiranje"),
                maxCena = Request.QueryString.Get("maxCena"),
                minCena = Request.QueryString.Get("minCena"),
                stanje = Request.QueryString.Get("stanje"),
                //-------------------------------------------------
                markaRacunara = Request.QueryString.Get("markaRacunara"),
                tipRacunara = Request.QueryString.Get("tipRacunara"),
                markaGraficke = Request.QueryString.Get("markaGraficke"),
                minGrafickaMemorija = Request.QueryString.Get("minGrafickaMemorija"),
                maxGrafickaMemorija = Request.QueryString.Get("maxGrafickaMemorija"),
                minHddMemorija = Request.QueryString.Get("minHddMemorija"),
                maxHddMemorija = Request.QueryString.Get("maxHddMemorija"),
                minRamMemorija = Request.QueryString.Get("minRamMemorija"),
                maxRamMemorija = Request.QueryString.Get("maxRamMemorija"),
                minProcesorBrzina = Request.QueryString.Get("minProcesorBrzina"),
                maxProcesorBrzina = Request.QueryString.Get("maxProcesorBrzina"),
                minProcesorJezgara = Request.QueryString.Get("minProcesorJezgara"),
                maxProcesorJezgara = Request.QueryString.Get("maxProcesorJezgara"),
            }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
        }
        else if (jeLiNekretninaOglas)
        {
            @Html.PagedListPager(Model.Oglasi, page => Url.Action("Index",
            new {
                page,
                sortiranje = Request.QueryString.Get("sortiranje"),
                maxCena = Request.QueryString.Get("maxCena"),
                minCena = Request.QueryString.Get("minCena"),
                stanje = Request.QueryString.Get("stanje"),
                //-------------------------------------------------
                tipNekretnine = Request.QueryString.Get("tipNekretnine"),
                lokacijaNekretnine = Request.QueryString.Get("lokacijaNekretnine"),
                minKvadratura = Request.QueryString.Get("minKvadratura"),
                maxKvadratura = Request.QueryString.Get("maxKvadratura"),
                minBrojSoba = Request.QueryString.Get("minBrojSoba"),
                maxBrojSoba = Request.QueryString.Get("maxBrojSoba"),
            }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
        }
        else if (jeLiListaOglasaPoKorisniku)
        {
            @Html.PagedListPager(Model.Oglasi, page => Url.Action("Index",
            new { page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
        }
    </div>
</main>

@section scripts
{
    <script>
        $(document).ready(function () {

            const urlParams = new URLSearchParams(window.location.search);

            var sortiranjeInput = document.querySelector("#sortiranje");
            var minCenaInput = document.querySelector("#minCena");
            var maxCenaInput = document.querySelector("#maxCena");
            var stanjeInput = document.querySelector("#stanje");

            sortiranjeInput.value = urlParams.get("sortiranje");
            minCenaInput.value = urlParams.get("minCena");
            maxCenaInput.value = urlParams.get("maxCena");
            stanjeInput.value = urlParams.get("stanje");

            if ("@jeLiAutoOglas" == "True") {

                var izborAutoMarkeDropdown = document.querySelector("#markaAuta");
                izborAutoMarkeDropdown.value = urlParams.get("markaAuta");

                if (urlParams.get("markaAuta") != 0) {
                    popuniTabeluAutoModela(urlParams.get("markaAuta"));
                }

                var izborAutoModelaDropdown = document.querySelector("#modelAuta");
                //izborAutoModelaDropdown.value = urlParams.get("modelAuta");

                var maxKilometrazaInput = document.querySelector("#maxKilometraza");
                maxKilometrazaInput.value = urlParams.get("maxKilometraza");

                var minKonjskihSnagaInput = document.querySelector("#minKonjskihSnaga");
                minKonjskihSnagaInput.value = urlParams.get("minKonjskihSnaga");

                var maxKonjskihSnagaInput = document.querySelector("#maxKonjskihSnaga");
                maxKonjskihSnagaInput.value = urlParams.get("maxKonjskihSnaga");

                var minKubikazaInput = document.querySelector("#minKubikaza");
                minKubikazaInput.value = urlParams.get("minKubikaza");

                var maxKubikazaInput = document.querySelector("#maxKubikaza");
                maxKubikazaInput.value = urlParams.get("maxKubikaza");

                var izborGodista1Input = document.querySelector("#izborGodista1");
                izborGodista1Input.value = urlParams.get("izborGodista1") == null ? 0 : urlParams.get("izborGodista1");

                var izborGodista2Input = document.querySelector("#izborGodista2");
                izborGodista2Input.value = urlParams.get("izborGodista2") == null ? 0 : urlParams.get("izborGodista2");

                izborAutoMarkeDropdown.addEventListener("change", function (e) {
                    var izabranaMarkaAuta = e.target.value;

                    if (izabranaMarkaAuta == 0) {
                        izborAutoModelaDropdown.innerHTML = "";
                        izborAutoModelaDropdown.innerHTML += `<option value="0"></option>`
                    }
                    else {
                        popuniTabeluAutoModela(izabranaMarkaAuta);
                    }
                });

                function popuniTabeluAutoModela(autoMarkaId) {
                    $.ajax({
                        url: `/api/auto-modeli/${autoMarkaId}`,
                        method: "GET",
                        success: function (data) {
                            izborAutoModelaDropdown.innerHTML = "";
                            izborAutoModelaDropdown.innerHTML += `<option value="0"></option>`

                            data.forEach(function (x) {
                                var selected = x.Id == urlParams.get("modelAuta") ? "selected" : "";
                                var opcijaZaModel = `<option ${selected} value="${x.Id}">${x.AutoModel}</option>`
                                izborAutoModelaDropdown.innerHTML += opcijaZaModel;
                            })
                        },
                        error: function (err) {
                            console.log(err.responseText)
                        }
                    })
                }
            }

            else if ("@jeLiRacunarOglas" == "True") {

                var markaRacunaraInput = document.querySelector("#markaRacunara");
                markaRacunaraInput.value = urlParams.get("markaRacunara");

                var tipRacunaraInput = document.querySelector("#tipRacunara");
                tipRacunaraInput.value = urlParams.get("tipRacunara");

                var markaGrafickeInput = document.querySelector("#markaGraficke");
                markaGrafickeInput.value = urlParams.get("markaGraficke");

                var minGrafickaMemorijaInput = document.querySelector("#minGrafickaMemorija");
                minGrafickaMemorijaInput.value = urlParams.get("minGrafickaMemorija");

                var maxGrafickaMemorijaInput = document.querySelector("#maxGrafickaMemorija");
                maxGrafickaMemorijaInput.value = urlParams.get("maxGrafickaMemorija");

                var minHddMemorijaInput = document.querySelector("#minHddMemorija");
                minHddMemorijaInput.value = urlParams.get("minHddMemorija");

                var maxHddMemorijaInput = document.querySelector("#maxHddMemorija");
                maxHddMemorijaInput.value = urlParams.get("maxHddMemorija");

                var minRamMemorijaInput = document.querySelector("#minRamMemorija");
                minRamMemorijaInput.value = urlParams.get("minRamMemorija");

                var maxRamMemorijaInput = document.querySelector("#maxRamMemorija");
                maxRamMemorijaInput.value = urlParams.get("maxRamMemorija");

                var minProcesorBrzinaInput = document.querySelector("#minProcesorBrzina");
                minProcesorBrzinaInput.value = urlParams.get("minProcesorBrzina");

                var maxProcesorBrzinaInput = document.querySelector("#maxProcesorBrzina");
                maxProcesorBrzinaInput.value = urlParams.get("maxProcesorBrzina");

                var minProcesorJezgaraInput = document.querySelector("#minProcesorJezgara");
                minProcesorJezgaraInput.value = urlParams.get("minProcesorJezgara");

                var maxProcesorJezgaraInput = document.querySelector("#maxProcesorJezgara");
                maxProcesorJezgaraInput.value = urlParams.get("maxProcesorJezgara");
            }

            else if ("@jeLiNekretninaOglas" == "True") {

                var tipNekretnineInput = document.querySelector("#tipNekretnine");
                tipNekretnineInput.value = urlParams.get("tipNekretnine");

                var lokacijaNekretnineInput = document.querySelector("#lokacijaNekretnine");
                lokacijaNekretnineInput.value = urlParams.get("lokacijaNekretnine");

                var minKvadraturaInput = document.querySelector("#minKvadratura");
                minKvadraturaInput.value = urlParams.get("minKvadratura");

                var maxKvadraturaInput = document.querySelector("#maxKvadratura");
                maxKvadraturaInput.value = urlParams.get("maxKvadratura");

                var minBrojSobaInput = document.querySelector("#minBrojSoba");
                minBrojSobaInput.value = urlParams.get("minBrojSoba");

                var maxBrojSobaInput = document.querySelector("#maxBrojSoba");
                maxBrojSobaInput.value = urlParams.get("maxBrojSoba");
            }
        })
    </script>
}